directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
scalar Time

interface Node {
  id: ID! @goField(name: "GlobalID")
}

type User implements Node @key(fields: "id") {
  id: ID! @goField(name: "GlobalID") @external
  age: Int!
  name: String!
  createdAt: Time!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type UserConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  nodes: [User!]!
}

enum OrderDirection {
  ASC
  DESC
}

enum UserOrderField {
  CREATED_AT
}

input UserOrder {
  direction: OrderDirection!
  field: UserOrderField
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  users(after: String, first: Int, before: String, last: Int, orderBy: UserOrder, where: UserWhereInput): UserConnection
}